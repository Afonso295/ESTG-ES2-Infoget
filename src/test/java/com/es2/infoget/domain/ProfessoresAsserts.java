package com.es2.infoget.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProfessoresAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfessoresAllPropertiesEquals(Professores expected, Professores actual) {
        assertProfessoresAutoGeneratedPropertiesEquals(expected, actual);
        assertProfessoresAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfessoresAllUpdatablePropertiesEquals(Professores expected, Professores actual) {
        assertProfessoresUpdatableFieldsEquals(expected, actual);
        assertProfessoresUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfessoresAutoGeneratedPropertiesEquals(Professores expected, Professores actual) {
        assertThat(expected)
            .as("Verify Professores auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfessoresUpdatableFieldsEquals(Professores expected, Professores actual) {
        assertThat(expected)
            .as("Verify Professores relevant properties")
            .satisfies(e -> assertThat(e.getNomeprofessor()).as("check nomeprofessor").isEqualTo(actual.getNomeprofessor()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getPassword()).as("check password").isEqualTo(actual.getPassword()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfessoresUpdatableRelationshipsEquals(Professores expected, Professores actual) {
        // empty method
    }
}
