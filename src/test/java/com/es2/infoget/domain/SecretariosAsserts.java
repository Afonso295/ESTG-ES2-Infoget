package com.es2.infoget.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SecretariosAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSecretariosAllPropertiesEquals(Secretarios expected, Secretarios actual) {
        assertSecretariosAutoGeneratedPropertiesEquals(expected, actual);
        assertSecretariosAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSecretariosAllUpdatablePropertiesEquals(Secretarios expected, Secretarios actual) {
        assertSecretariosUpdatableFieldsEquals(expected, actual);
        assertSecretariosUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSecretariosAutoGeneratedPropertiesEquals(Secretarios expected, Secretarios actual) {
        assertThat(expected)
            .as("Verify Secretarios auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSecretariosUpdatableFieldsEquals(Secretarios expected, Secretarios actual) {
        assertThat(expected)
            .as("Verify Secretarios relevant properties")
            .satisfies(e -> assertThat(e.getNomesecretario()).as("check nomesecretario").isEqualTo(actual.getNomesecretario()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getPassword()).as("check password").isEqualTo(actual.getPassword()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSecretariosUpdatableRelationshipsEquals(Secretarios expected, Secretarios actual) {
        // empty method
    }
}
